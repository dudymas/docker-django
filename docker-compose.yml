version: "3"

volumes:
  local_postgres_data: {}
  local_postgres_data_backups: {}

services:
  nginx:
    image: nginx:alpine
    container_name: nz01
    ports:
      - "8000:8000"
    volumes:
      - ./src:/src
      - ./config/nginx:/etc/nginx/conf.d
    depends_on:
      - web
    networks:
      - djangonetwork
  worker:
    build:
      context: .
      dockerfile: compose/django/Dockerfile.celery
    container_name: wz01
    environment:
      - IS_CELERY_WORKER=1
    depends_on:
      - db
    volumes:
      - ./src:/src
    links:
      - redis
      - jaeger
    env_file:
      - ./.envs/.django
    networks:
      - djangonetwork
  web:
    build:
      context: .
      dockerfile: compose/django/Dockerfile.django
    container_name: dz01
    depends_on:
      - db
    volumes:
      - ./src:/src
    expose:
      - "8000"
    links:
      - redis
      - jaeger
    env_file:
      - ./.envs/.django
    networks:
      - djangonetwork
  db:
    build:
      context: .
      dockerfile: compose/postgres/Dockerfile
    container_name: pz01
    env_file:
      - ./.envs/.postgres
    volumes:
      - local_postgres_data:/var/lib/postgresql/data
      - local_postgres_data_backups:/backups
    networks:
      - djangonetwork
  redis:
    image: redis:alpine
    container_name: rz01
    ports:
      - "6379:6379"
    networks:
      - djangonetwork
  hotrod:
    image: jaegertracing/example-hotrod:1.16
    container_name: hz01
    command: all
    environment:
      - JAEGER_AGENT_HOST=jaeger
      - JAEGER_AGENT_PORT=6831
    links:
      - jaeger
    ports:
      - 8080:8080
    networks:
      - djangonetwork
  jaeger:
    image: jaegertracing/all-in-one:1.16
    container_name: tz01
    ports:
      - "16686:16686"
    networks:
      - djangonetwork

networks:
  djangonetwork:
    driver: bridge
